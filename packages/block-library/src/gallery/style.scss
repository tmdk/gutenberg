// Import styles for rendering the static content of deprecated gallery versions.
@import "./deprecated.scss";

// Styles for current version of gallery block.
.wp-block-gallery.has-nested-images {
	ul.blocks-gallery-grid {
		// Some themes give all <ul> default margin instead of padding.
		margin: 0;
		list-style-type: none;
		padding: 0;

		// Avoid applying flex styles to IE11.
		@supports ( position: sticky ) {
			display: flex;
			flex-wrap: wrap;
		}

		// Need bogus :not(#individual-image) to override long :not()
		// specificity chain on default image block on front end.
		li.list-image:not(#individual-image) {
			// Add space between thumbnails, and unset right most thumbnails later.
			margin: 0 $grid-unit-20 $grid-unit-20 0;

			&:last-child {
				margin-right: 0;
			}
		}

		li.list-image {
			position: relative;

			// Avoid applying flex styles to IE11.
			@supports ( position: sticky ) {
				display: flex;
				flex-direction: column;
				flex-grow: 1;
				justify-content: center;
			}

			// Again, we need :not(#individual-image) to override long :not()
			// chain on frontend styles.
			figure:not(#individual-image) {
				margin: 0;
				max-width: 100%; // When aligned wide or full, this allows image to fill row.

				// Avoid applying flex styles to IE11.
				@supports ( position: sticky ) {
					display: flex;
					flex-direction: column; // Needed for frontend when img isn't wrapped in div.
					flex-grow: 1;
				}
			}

			figure > div,
			figure > a {
				margin: 0;

				// Avoid applying flex styles to IE11.
				@supports ( position: sticky ) {
					flex-direction: column;
					flex-grow: 1;
				}
			}

			img {
				display: block;
				max-width: 100%;
				height: auto;
				width: 100%;

				// IE doesn't handle cropping, so we need an explicit width here.
				// IE11 doesn't read rules inside this query. They are applied only to modern browsers.
				@supports ( position: sticky ) {
					width: auto;
				}
			}

			figcaption {
				position: absolute;
				margin-bottom: 0;
				bottom: 0;
				width: 100%;
				max-height: 100%;
				overflow: auto;
				padding: 40px 10px 9px;
				color: $white;
				text-align: center;
				font-size: $default-font-size;
				background: linear-gradient(0deg, rgba($color: $black, $alpha: 0.7) 0, rgba($color: $black, $alpha: 0.3) 70%, transparent);

				img {
					display: inline;
				}
			}
		}
	}

	figcaption {
		flex-grow: 1;
	}

	// Cropped Images.
	&.is-cropped ul.blocks-gallery-grid li.list-image:not(#individual-image) {
		figure > div,
		figure > a {
			// Avoid applying flex styles to IE11.
			@supports ( position: sticky ) {
				display: flex;
			}
		}

		a,
		img {
			// IE11 doesn't support object-fit, so just make sure images aren't skewed.
			// The following rules are for all browsers.
			width: 100%;

			// IE11 doesn't read rules inside this query. They are applied only to modern browsers.
			@supports ( position: sticky ) {
				height: 100%;
				flex: 1;
				object-fit: cover;
			}
		}
	}

	// On mobile and responsive viewports, we allow only 1 or 2 columns at the most.
	& li:not(#individual-image) {
		width: calc(50% - #{$grid-unit-20});

		&:nth-of-type(even) {
			margin-right: 0;
		}
	}

	&.columns-1 li:not(#individual-image) {
		width: 100%;
		margin-right: 0;
	}

	// Beyond mobile viewports, we allow up to 8 columns.
	@include break-small {
		@for $i from 3 through 8 {
			&.columns-#{ $i } li.list-image:not(#individual-image) {
				width: calc(#{100% / $i} - #{$grid-unit-20 * ( $i - 1 ) / $i});
				margin-right: $grid-unit-20;
			}
		}

		// Unset the right margin on every rightmost gallery item to ensure center balance.
		@for $column-count from 1 through 8 {
			&.columns-#{$column-count} li.list-image:not(#individual-image):nth-of-type( #{ $column-count }n ) {
				margin-right: 0;
			}
		}
	}

	// Apply max-width to floated items that have no intrinsic width.
	&.alignleft,
	&.alignright {
		max-width: $content-width / 2;
		width: 100%;
	}

	// If the gallery is centered, center the content inside as well.
	&.aligncenter {
		figure.wp-block-image {
			justify-content: center;
		}
	}
}
